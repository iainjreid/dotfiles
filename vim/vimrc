" vi:syntax=vim

set nocompatible
set noshowmode
set laststatus=2

" Open split panes in a more natural way
set splitbelow
set splitright

" Sane undo
map <C-z> u

" Simplify tab control
map <leader>t :tabnew <Enter>
map <leader>w :close <Enter>

map <leader>1 1gt
map <leader>2 2gt
map <leader>3 3gt
map <leader>4 4gt
map <leader>5 5gt
map <leader>6 6gt
map <leader>7 7gt
map <leader>8 8gt
map <leader>9 9gt

map <F2> :Goyo <Enter>

if has('mouse')
  set mouse=a
endif

" Simplify split pane navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Netrw setup
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

" Set a variable is STDIN was used
let g:stdin = 0
autocmd StdinReadPre * let g:stdin = 1

if argc() == 0
  augroup ProjectDrawer
    autocmd!
    autocmd VimEnter * if g:stdin == 0 | :Vexplore | endif
  augroup END
endif

call plug#begin('~/.vim/plugged')

" After testing, lightline performs better on startup than the most actively
" developed alternative, vim-airline. It also has a more robust approach to
" configuration in that it relies less on third-party integrations, and more
" upon strict, upfront configuration provided by the user.
Plug 'itchyny/lightline.vim'

let g:lightline = {
\   'active': {
\     'left': [
\       [ 'mode', 'paste' ],
\       [ 'gitbranch', 'readonly', 'filename', 'modified' ]
\     ]
\   },
\   'component_function': {
\     'gitbranch': 'fugitive#head'
\   }
\ }

" For quicker project navigation and asynchronous testing and building, I use
" both vim-dispatch and vim-projectionist.
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-projectionist'

let g:projectionist_heuristics = {
\   'package.json': {
\     'src/main/*.js': {'alternate': 'src/test/{}.spec.js'},
\     'src/test/*.spec.js': {'alternate': 'src/main/{}.js'}
\   }
\ }

Plug 'junegunn/goyo.vim'
Plug 'reedes/vim-pencil'
Plug 'tpope/vim-fugitive'
Plug 'joereynolds/vim-minisnip'
Plug 'thaerkh/vim-workspace'

if executable('gtm')
  Plug 'git-time-metric/gtm-vim-plugin'
endif

call plug#end()
