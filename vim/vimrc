" vi:syntax=vim

"set t_Co=256
set laststatus=2
set backspace=indent,eol,start
set background=dark

" Open split panes in a more natural way
set splitbelow
set splitright

highlight VertSplit cterm=NONE

set fillchars+=vert:\â”‚

" Statusline
set statusline=\ %f%=%y\ %p%%\ %c:%l\ 

" Simplify tab control
map <leader>t :tabnew <Enter>
map <leader>w :close <Enter>

map <leader>1 1gt
map <leader>2 2gt
map <leader>3 3gt
map <leader>4 4gt
map <leader>5 5gt
map <leader>6 6gt
map <leader>7 7gt
map <leader>8 8gt
map <leader>9 9gt

if has('mouse')
  set mouse=a
endif

" Simplify split pane navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Netrw setup
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

call plug#begin('~/.vim/plugged')

Plug 'junegunn/vim-easy-align'

Plug 'reedes/vim-pencil'
Plug 'joereynolds/vim-minisnip'

" Set to ensure disk write for use with hot reloading
set nobackup nowritebackup

if executable('gtm')
  Plug 'git-time-metric/gtm-vim-plugin'
endif

call plug#end()

" Starts a new session
function StartSession()
  let b:sessiondir = $HOME . "/.local/state/vim" . getcwd()
  let b:sessionfile = b:sessiondir . "/session.vim"
  
  if (filewritable(b:sessiondir) != 2)
    exe 'silent !mkdir -p ' b:sessiondir
    redraw!
  endif
  
  exe "mksession! " . b:sessionfile
  echo 'Session started'
endfunction

" Loads a session if it exists
function LoadSession()
  let b:sessiondir = $HOME . "/.local/state/vim" . getcwd()
  let b:sessionfile = b:sessiondir . "/session.vim"

  if (filereadable(b:sessionfile))
    exe 'source ' b:sessionfile
    echo 'Session loaded'
  endif
endfunction

" Saves a session if it exists
function SaveSession()
  let b:sessiondir = $HOME . "/.local/state/vim" . getcwd()
  let b:sessionfile = b:sessiondir . "session.vim"

  if (filereadable(b:sessionfile))
    exe "mksession! " . b:sessionfile
  endif
endfunction

if !argc()
  au VimEnter * :call LoadSession()
  au VimLeave * :call SaveSession()
  
  map <leader>m :call StartSession()<CR>
endif
